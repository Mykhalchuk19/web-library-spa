{"version":3,"sources":["assets/flags/ukraine.svg","assets/flags/united-kingdom.svg","containers/SignUpForm/rules.ts","containers/SignUpForm/SignUpForm.tsx","containers/SignInForm/rules.ts","containers/SignInForm/SignInForm.tsx","containers/Layout/components/Navigation/Navigation.tsx","containers/Layout/components/LeftSideBar/useLeftSidebar.ts","containers/Layout/components/LeftSideBar/LeftSideBar.tsx","containers/Layout/Layout.tsx","containers/profileContainer/rules.ts","containers/profileContainer/useProfile.ts","containers/profileContainer/profileContainer.tsx","containers/UsersContainer/components/UsersPagination/UseUsersPagination.ts","containers/UsersContainer/components/UsersPagination/UsersPagination.tsx","containers/UsersContainer/useUsers.ts","containers/UsersContainer/UsersContainer.tsx","pages/Profile/Profile.tsx"],"names":["module","exports","rules","yup","username","required","firstname","lastname","email","password","min","max","useStyles","makeStyles","signup__wrapper","width","maxWidth","margin","signup__btn","marginBottom","SignUpForm","dispatch","useDispatch","isPending","useSelector","userSelectors","getAuthPending","t","useTranslation","useFormik","initialValues","validateOnChange","validationSchema","enableReinitialize","onSubmit","formValues","userActions","userSignUpRequest","setSubmitting","handleSubmit","values","errors","handleChange","isSubmitting","classes","Paper","elevation","className","CustomInput","id","label","error","inputProps","name","disabled","onChange","value","type","text","to","signin__wrapper","signin__btn","signin__link","marginTop","userSignInRequest","Navigation","MenuList","Object","NAVIGATION","map","href","title","MenuItem","UseLeftSideBar","history","useHistory","logOut","useCallback","localStorage","removeItem","userLogOut","push","changeLanguage","lng","a","i18n","reloadResources","LeftSideBar","onClick","IconButton","LANGUAGES","uk","src","ukraineFlag","alt","en","ukFlag","Layout","children","useProfile","user","getUserData","userUpdateRequest","useEffect","getCurrentUserRequest","profile__btn","memo","isEmpty","UseUsersPagination","page","count","rowsPerPage","onChangePage","handleNextPage","event","handlePreviousPage","handleLastPage","Math","ceil","handleFirstPage","UsersPagination","props","aria-label","FirstPage","KeyboardArrowLeft","KeyboardArrowRight","LastPage","useUsers","usersList","getUsersList","users","limit","usersListRequest","changePage","newPage","changeRowsPerPage","parseInt","target","usersForShow","useMemo","slice","handleEditUser","handleDeleteUser","UsersContainer","TableContainer","Table","TableHead","TableRow","USER_FIELDS","field","TableCell","key","colSpan","TableBody","component","Edit","Delete","TableFooter","TablePagination","labelRowsPerPage","onChangeRowsPerPage","ActionsComponent","Profile"],"mappings":"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","file":"static/js/5.89595cfc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ukraine.2fed2ba2.svg\";","module.exports = __webpack_public_path__ + \"static/media/united-kingdom.386cc387.svg\";","import * as yup from 'yup';\nimport { Values } from './SignUpForm';\n\nconst rules = yup.object<Values>({\n  username: yup.string().required('Username is required'),\n  firstname: yup.string().required('First name is required'),\n  lastname: yup.string().required('Last name is required'),\n  email: yup.string().email('Email is not valid').required('Email is required'),\n  password: yup.string()\n    .required('Password is required')\n    .min(6, 'Password is too short')\n    .max(30, 'Password is too long'),\n});\n\nexport default rules;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { Form, CustomButton } from '../../components';\nimport { userActions, userSelectors } from '../../state/user';\nimport rules from './rules';\nimport './style.sass';\n\nexport interface Values {\n    username: string;\n    firstname: string;\n    lastname: string;\n    email: string;\n    password: string;\n}\n\ninterface Props {\n    initialValues?: Values;\n    validateOnChange?: boolean;\n    onSubmit?: (v: Values) => Promise<void>\n}\n\nconst useStyles = makeStyles({\n  signup__wrapper: {\n    width: 'auto',\n    maxWidth: '400px',\n    margin: '0 auto',\n  },\n  signup__btn: {\n    marginBottom: '10px',\n  },\n});\n\nconst SignUpForm: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const isPending = useSelector(userSelectors.getAuthPending);\n  const { t } = useTranslation(['auth']);\n  const {\n    handleSubmit,\n    values,\n    errors,\n    handleChange,\n    setSubmitting,\n    isSubmitting,\n  } = useFormik<Values>({\n    initialValues: {\n      username: '',\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n    },\n    validateOnChange: false,\n    validationSchema: rules,\n    enableReinitialize: true,\n    onSubmit: (formValues) => {\n      dispatch(userActions.userSignUpRequest(formValues));\n      setSubmitting(isPending);\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Paper\n      elevation={3}\n      className={classes.signup__wrapper}\n    >\n      <form className=\"signup__form\" onSubmit={handleSubmit}>\n        <div className=\"signup__header\">\n          <h2 className=\"signup__title\">{t('Sign Up')}</h2>\n        </div>\n        <div className=\"signup__body\">\n          <div className=\"signup__row\">\n            <Form.CustomInput\n              id=\"username\"\n              label=\"Username\"\n              error={errors.username || ''}\n              inputProps={{\n                name: 'username',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.username,\n              }}\n            />\n          </div>\n          <div className=\"signup__row\">\n            <Form.CustomInput\n              id=\"firstname\"\n              label=\"First name\"\n              error={errors.firstname || ''}\n              inputProps={{\n                name: 'firstname',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.firstname,\n              }}\n            />\n          </div>\n          <div className=\"signup__row\">\n            <Form.CustomInput\n              id=\"lastname\"\n              label=\"Last name\"\n              error={errors.lastname || ''}\n              inputProps={{\n                name: 'lastname',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.lastname,\n              }}\n            />\n          </div>\n          <div className=\"signup__row\">\n            <Form.CustomInput\n              id=\"email\"\n              label=\"Email\"\n              error={errors.email || ''}\n              inputProps={{\n                name: 'email',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.email,\n              }}\n            />\n          </div>\n          <div className=\"signup__row\">\n            <Form.CustomInput\n              id=\"password\"\n              label=\"Password\"\n              error={errors.password || ''}\n              inputProps={{\n                name: 'password',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.password,\n                type: 'password',\n              }}\n            />\n          </div>\n          <div className=\"signup__row\">\n            <CustomButton\n              type=\"submit\"\n              className={classes.signup__btn}\n              text=\"Submit\"\n            />\n            <NavLink\n              to=\"/auth/signin\"\n              className=\"signup__link\"\n            >\n              {t('I already sign in')}\n            </NavLink>\n          </div>\n        </div>\n      </form>\n    </Paper>\n  );\n};\n\nexport default SignUpForm;\n","import * as yup from 'yup';\nimport { Values } from './SignInForm';\n\nconst rules = yup.object<Values>({\n  username: yup.string().required('Username is required'),\n  password: yup.string()\n    .required('Password is required')\n    .min(6, 'Password is too short')\n    .max(30, 'Password is too long'),\n});\n\nexport default rules;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { useTranslation } from 'react-i18next';\nimport { Form, CustomButton } from '../../components';\nimport { userActions, userSelectors } from '../../state/user';\nimport rules from './rules';\nimport './style.sass';\n\nexport interface Values {\n    username: string;\n    password: string;\n}\n\ninterface Props {\n    initialValues?: Values;\n    validateOnChange?: boolean;\n    onSubmit?: (v: Values) => Promise<void>\n}\n\nconst useStyles = makeStyles({\n  signin__wrapper: {\n    width: 'auto',\n    maxWidth: '400px',\n    margin: '0 auto',\n  },\n  signin__btn: {\n    marginBottom: '10px',\n  },\n  signin__link: {\n    marginTop: '10px',\n  },\n});\n\nconst SignUpForm: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const isPending = useSelector(userSelectors.getAuthPending);\n  const { t } = useTranslation(['auth', 'common']);\n  const {\n    handleSubmit,\n    values,\n    errors,\n    handleChange,\n    setSubmitting,\n    isSubmitting,\n  } = useFormik<Values>({\n    initialValues: {\n      username: '',\n      password: '',\n    },\n    validateOnChange: false,\n    validationSchema: rules,\n    enableReinitialize: true,\n    onSubmit: (formValues) => {\n      dispatch(userActions.userSignInRequest(formValues));\n      setSubmitting(isPending);\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Paper\n      elevation={3}\n      className={classes.signin__wrapper}\n    >\n      <form className=\"signin__form\" onSubmit={handleSubmit}>\n        <div className=\"signin__header\">\n          <h2 className=\"signin__title\">{t('Sign In')}</h2>\n        </div>\n        <div className=\"signin__body\">\n          <div className=\"signin__row\">\n            <Form.CustomInput\n              id=\"username\"\n              label={t('Username')}\n              error={errors.username || ''}\n              inputProps={{\n                name: 'username',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.username,\n              }}\n            />\n          </div>\n          <div className=\"signin__row\">\n            <Form.CustomInput\n              id=\"password\"\n              label={t('Password')}\n              error={errors.password || ''}\n              inputProps={{\n                name: 'password',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.password,\n                type: 'password',\n              }}\n            />\n          </div>\n          <div className=\"signin__row\">\n            <CustomButton\n              type=\"submit\"\n              className={classes.signin__btn}\n              text={t('Submit')}\n            />\n            <NavLink\n              to=\"/auth/signup\"\n              className=\"signin__link\"\n            >\n              {t('I`m not signed up yet')}\n            </NavLink>\n          </div>\n        </div>\n      </form>\n    </Paper>\n  );\n};\n\nexport default SignUpForm;\n","import React from 'react';\nimport { MenuItem, MenuList } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport { NavLink } from 'react-router-dom';\nimport { NAVIGATION } from '../../../../constants';\nimport './style.sass';\n\nconst Navigation: React.FC = () => {\n  const { t } = useTranslation(['common']);\n  return (\n    <nav className=\"main-nav\">\n      <MenuList>\n        {\n                    Object.values(NAVIGATION).map(({ href, title }) => (\n                      <MenuItem>\n                        <NavLink className=\"main-nav__link\" to={href}>{t(title)}</NavLink>\n                      </MenuItem>\n                    ))\n                }\n      </MenuList>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { useCallback } from 'react';\nimport i18n from '../../../../utils/i18next/config';\nimport { userActions } from '../../../../state/user';\n\ninterface IUseLeftSideBar {\n    logOut: () => void,\n    changeLanguage: (lng: string) => Promise<void>\n}\n\nconst UseLeftSideBar = (): IUseLeftSideBar => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const logOut = useCallback(() => {\n    localStorage.removeItem('authToken');\n    dispatch(userActions.userLogOut());\n    history.push('/');\n  }, [dispatch]);\n  const changeLanguage = useCallback(async (lng: string) => {\n    await i18n.changeLanguage(lng);\n    await i18n.reloadResources();\n  }, []);\n\n  return {\n    logOut,\n    changeLanguage,\n  };\n};\n\nexport default UseLeftSideBar;\n","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport Navigation from '../Navigation/Navigation';\nimport './style.sass';\nimport { CustomButton } from '../../../../components';\nimport { ukFlag, ukraineFlag } from '../../../../assets/flags';\nimport UseLeftSideBar from './useLeftSidebar';\nimport { LANGUAGES } from '../../../../constants';\n\nconst LeftSideBar: React.FC = () => {\n  const { logOut, changeLanguage } = UseLeftSideBar();\n  return (\n    <>\n      <aside className=\"left-sidebar\">\n        <Navigation />\n        <div className=\"left-sidebar__log-out\">\n          <CustomButton\n            type=\"button\"\n            onClick={logOut}\n            text=\"Log out\"\n          />\n        </div>\n        <div className=\"left-sidebar__copyright\">\n          <p className=\"left-sidebar__copyright--text\">Created by Mykhalchuk Yaroslav</p>\n        </div>\n        <div className=\"left-sidebar__languages\">\n          <IconButton onClick={() => changeLanguage(LANGUAGES.uk)}>\n            <img src={ukraineFlag} alt=\"Ukraine\" className=\"left-sidebar__languages--ua\" />\n          </IconButton>\n          <IconButton onClick={() => changeLanguage(LANGUAGES.en)}>\n            <img src={ukFlag} alt=\"United Kingdom\" className=\"left-sidebar__languages--uk\" />\n          </IconButton>\n        </div>\n      </aside>\n    </>\n  );\n};\n\nexport default LeftSideBar;\n","import React from 'react';\nimport { LeftSideBar } from './components';\nimport './style.sass';\n\ntype ILayout = {\n    children: React.ReactElement | React.ReactNode\n}\n\nconst Layout: React.FC<ILayout> = ({ children }: ILayout) => (\n  <>\n    <div className=\"layout\">\n      <LeftSideBar />\n      <section className=\"main\">\n        <main className=\"main-container\">\n          {children}\n        </main>\n      </section>\n    </div>\n  </>\n);\n\nexport default Layout;\n","import * as yup from 'yup';\nimport { Values } from './useProfile';\n\nconst rules = yup.object<Values>({\n  username: yup.string().required('Username is required'),\n  firstname: yup.string().required('First name is required'),\n  lastname: yup.string().required('Last name is required'),\n  email: yup.string().required('Email is required'),\n});\n\nexport default rules;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { userActions, userSelectors } from '../../state/user';\nimport { userInterfaces } from '../../interfaces';\nimport rules from './rules';\n\nexport interface Values {\n    username: string,\n    firstname: string,\n    lastname: string,\n    email: string,\n}\n\ninterface IUseProfile {\n    user: userInterfaces.IUser,\n    isPending: boolean\n    handleSubmit: (e?: React.FormEvent<HTMLFormElement>) => void,\n    values: userInterfaces.IUser,\n    errors: userInterfaces.IUser,\n    handleChange: (e: React.ChangeEvent<any>) => void,\n    setSubmitting: (isSubmitting: boolean) => void,\n    isSubmitting: boolean,\n    t: TFunction,\n}\n\nconst useProfile = (): IUseProfile => {\n  const dispatch = useDispatch();\n  const { t } = useTranslation(['common']);\n  const user = useSelector(userSelectors.getUserData);\n  const isPending = useSelector(userSelectors.getAuthPending);\n  const {\n    handleSubmit,\n    values,\n    errors,\n    handleChange,\n    setSubmitting,\n    isSubmitting,\n  } = useFormik<Values>({\n    initialValues: {\n      username: user.username,\n      firstname: user.firstname,\n      lastname: user.lastname,\n      email: user.email,\n    },\n    validateOnChange: false,\n    validationSchema: rules,\n    enableReinitialize: true,\n    onSubmit: (formValues) => {\n      dispatch(userActions.userUpdateRequest({ ...formValues, id: user.id }));\n      setSubmitting(isPending);\n    },\n  });\n  useEffect(() => {\n    dispatch(userActions.getCurrentUserRequest());\n  }, [dispatch]);\n  return {\n    user,\n    isPending,\n    handleSubmit,\n    values,\n    errors,\n    handleChange,\n    setSubmitting,\n    isSubmitting,\n    t,\n  };\n};\n\nexport default useProfile;\n","import React, { memo } from 'react';\nimport { isEmpty } from 'ramda';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Layout from '../Layout/Layout';\nimport { Form, CustomButton, Loader } from '../../components';\nimport useProfile from './useProfile';\nimport './style.sass';\n\nconst useStyles = makeStyles({\n  profile__btn: {\n    width: '100%',\n  },\n});\n\nconst ProfileContainer: React.FC = () => {\n  const {\n    handleSubmit,\n    values,\n    errors,\n    handleChange,\n    isSubmitting,\n    user,\n    t,\n  } = useProfile();\n  const classes = useStyles();\n  return (\n    <Layout>\n      {!isEmpty(user) && (\n        <form className=\"profile__form\" onSubmit={handleSubmit}>\n          <div className=\"profile__header\">\n            <h2 className=\"profile__title\">{t('Profile')}</h2>\n          </div>\n          <div className=\"profile__body\">\n            <div className=\"profile__row\">\n              <Form.CustomInput\n                id=\"username\"\n                label=\"Username\"\n                error={errors.username || ''}\n                inputProps={{\n                  name: 'username',\n                  disabled: isSubmitting,\n                  onChange: handleChange,\n                  value: values.username,\n                }}\n              />\n            </div>\n            <div className=\"profile__row\">\n              <Form.CustomInput\n                id=\"firstname\"\n                label=\"First name\"\n                error={errors.firstname || ''}\n                inputProps={{\n                  name: 'firstname',\n                  disabled: isSubmitting,\n                  onChange: handleChange,\n                  value: values.firstname,\n                }}\n              />\n            </div>\n            <div className=\"profile__row\">\n              <Form.CustomInput\n                id=\"lastname\"\n                label=\"Last name\"\n                error={errors.lastname || ''}\n                inputProps={{\n                  name: 'lastname',\n                  disabled: isSubmitting,\n                  onChange: handleChange,\n                  value: values.lastname,\n                }}\n              />\n            </div>\n            <div className=\"profile__row\">\n              <Form.CustomInput\n                id=\"email\"\n                label=\"Email\"\n                error={errors.email || ''}\n                inputProps={{\n                  name: 'email',\n                  disabled: isSubmitting,\n                  onChange: handleChange,\n                  value: values.email,\n                  type: 'email',\n                }}\n              />\n            </div>\n            <div className=\"profile__row\">\n              <CustomButton\n                type=\"submit\"\n                className={classes.profile__btn}\n                text=\"Save\"\n              />\n            </div>\n          </div>\n        </form>\n      )}\n    </Layout>\n  );\n};\n\nexport default memo(ProfileContainer);\n","import React, { useCallback } from 'react';\n\nexport interface IProps {\n    count: number,\n    page: number,\n    rowsPerPage: number,\n    onChangePage: (\n        event: React.MouseEvent<HTMLButtonElement> | null,\n        newPage: number) => void;\n}\n\ninterface IUseUsersPagination {\n    rowsPerPage: number,\n    page: number,\n    count: number,\n    handleNextPage: (event: React.MouseEvent<HTMLButtonElement>) => void,\n    handlePreviousPage: (event: React.MouseEvent<HTMLButtonElement>) => void,\n    handleLastPage: (event: React.MouseEvent<HTMLButtonElement>) => void,\n    handleFirstPage: (event: React.MouseEvent<HTMLButtonElement>) => void\n}\n\nconst UseUsersPagination = ({\n  page, count, rowsPerPage, onChangePage,\n}: IProps): IUseUsersPagination => {\n  const handleNextPage = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      onChangePage(event, page + 1);\n    },\n    [page, onChangePage],\n  );\n  const handlePreviousPage = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      onChangePage(event, page - 1);\n    },\n    [page, onChangePage],\n  );\n  const handleLastPage = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    },\n    [count, rowsPerPage, onChangePage],\n  );\n  const handleFirstPage = useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      onChangePage(event, 0);\n    },\n    [onChangePage],\n  );\n\n  return {\n    rowsPerPage,\n    page,\n    count,\n    handleNextPage,\n    handlePreviousPage,\n    handleLastPage,\n    handleFirstPage,\n  };\n};\n\nexport default UseUsersPagination;\n","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport {\n  LastPage, FirstPage, KeyboardArrowLeft, KeyboardArrowRight,\n} from '@material-ui/icons';\nimport UseUsersPagination, { IProps } from './UseUsersPagination';\n\nconst UsersPagination: React.FC<IProps> = (props: IProps) => {\n  const {\n    page,\n    count,\n    rowsPerPage,\n    handlePreviousPage,\n    handleNextPage,\n    handleFirstPage,\n    handleLastPage,\n  } = UseUsersPagination(props);\n  return (\n    <>\n      <IconButton\n        onClick={handleFirstPage}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        <FirstPage />\n      </IconButton>\n      <IconButton\n        onClick={handlePreviousPage}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        <KeyboardArrowLeft />\n      </IconButton>\n      <IconButton\n        onClick={handleNextPage}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        <KeyboardArrowRight />\n      </IconButton>\n      <IconButton\n        onClick={handleLastPage}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        <LastPage />\n      </IconButton>\n    </>\n  );\n};\n\nexport default UsersPagination;\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { TFunction } from 'i18next';\nimport { userActions, userSelectors } from '../../state/user';\nimport { userInterfaces } from '../../interfaces';\n\ninterface IUseUsers {\n  usersForShow: Array<userInterfaces.UserItem>,\n  limit: number,\n  page: number,\n  count: number,\n  changePage: (\n      event: React.MouseEvent<HTMLButtonElement> | null,\n      newPage: number) => void,\n  changeRowsPerPage: (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => void,\n  handleEditUser: (id?: number) => void,\n  handleDeleteUser: (id?: number) => void,\n  t: TFunction\n}\n\nconst useUsers = (): IUseUsers => {\n  const dispatch = useDispatch();\n  const usersList = useSelector(userSelectors.getUsersList);\n  const { t } = useTranslation(['common']);\n  const {\n    users, limit, page, count,\n  } = usersList;\n  useEffect(() => {\n    dispatch(userActions.usersListRequest());\n  }, [dispatch]);\n\n  const changePage = useCallback((\n    event: React.MouseEvent<HTMLButtonElement> | null,\n    newPage: number,\n  ) => {\n    dispatch(userActions.usersListRequest({ page: newPage, limit }));\n  },\n  [dispatch, limit]);\n\n  const changeRowsPerPage = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n      dispatch(userActions.usersListRequest({ page: 0, limit: parseInt(event.target.value, 10) }));\n    },\n    [dispatch],\n  );\n\n  const usersForShow = useMemo(\n    () => users.slice(page * limit, page * limit + limit),\n    [users, limit, page],\n  );\n\n  const handleEditUser = useCallback((id) => {}, []);\n  const handleDeleteUser = useCallback((id) => {}, []);\n\n  return {\n    usersForShow,\n    limit,\n    page,\n    count,\n    changePage,\n    changeRowsPerPage,\n    handleEditUser,\n    handleDeleteUser,\n    t,\n  };\n};\n\nexport default useUsers;\n","import React from 'react';\nimport { isEmpty } from 'ramda';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableRow,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableFooter,\n  IconButton,\n} from '@material-ui/core';\nimport { Edit, Delete, LastPage } from '@material-ui/icons';\nimport Layout from '../Layout/Layout';\nimport { USER_FIELDS } from '../../constants';\nimport { UsersPagination } from './components';\nimport useUsers from './useUsers';\nimport './style.sass';\n\nconst UsersContainer: React.FC = () => {\n  const {\n    usersForShow,\n    limit,\n    page,\n    count,\n    changePage,\n    changeRowsPerPage,\n    handleEditUser,\n    handleDeleteUser,\n    t,\n  } = useUsers();\n  return (\n    <>\n      <Layout>\n        <div className=\"users__wrapper\">\n          <h2 className=\"users__title\">{t('Users')}</h2>\n          { !isEmpty(usersForShow) && (\n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  {USER_FIELDS.map(({ id, field }) => (\n                    <TableCell\n                      key={id}\n                    >\n                      {t(field)}\n                    </TableCell>\n                  ))}\n                  <TableCell colSpan={0.5} />\n                  <TableCell colSpan={0.5} />\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {\n                  usersForShow.map(({\n                    id, username, firstname, lastname, email,\n                  }) => (\n                    <TableRow key={id}>\n                      <TableCell component=\"td\">\n                        {id}\n                      </TableCell>\n                      <TableCell component=\"td\">\n                        {username}\n                      </TableCell>\n                      <TableCell component=\"td\">\n                        {firstname}\n                      </TableCell>\n                      <TableCell component=\"td\">\n                        {lastname}\n                      </TableCell>\n                      <TableCell component=\"td\">\n                        {email}\n                      </TableCell>\n                      <TableCell component=\"td\" colSpan={0.5}>\n                        <IconButton\n                          onClick={() => handleEditUser(id)}\n                          type=\"button\"\n                          aria-label=\"edit\"\n                        >\n                          <Edit />\n                        </IconButton>\n                      </TableCell>\n                      <TableCell component=\"td\" colSpan={0.5}>\n                        <IconButton\n                          onClick={() => handleDeleteUser(id)}\n                          type=\"button\"\n                          aria-label=\"delete\"\n                        >\n                          <Delete />\n                        </IconButton>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                }\n              </TableBody>\n              <TableFooter>\n                <TableRow>\n                  <TablePagination\n                    count={count}\n                    rowsPerPage={limit}\n                    labelRowsPerPage={t('Rows per page')}\n                    page={page}\n                    onChangePage={changePage}\n                    onChangeRowsPerPage={changeRowsPerPage}\n                    colSpan={7}\n                    ActionsComponent={UsersPagination}\n                  />\n                </TableRow>\n              </TableFooter>\n            </Table>\n          </TableContainer>\n          )}\n        </div>\n      </Layout>\n    </>\n  );\n};\n\nexport default UsersContainer;\n","import React from 'react';\nimport { ProfileContainer } from '../../containers';\n\nconst Profile: React.FC = () => (\n  <ProfileContainer />\n);\n\nexport default Profile;\n"],"sourceRoot":""}