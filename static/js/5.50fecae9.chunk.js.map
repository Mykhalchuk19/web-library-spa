{"version":3,"sources":["containers/SignUpForm/rules.ts","containers/SignUpForm/SignUpForm.tsx","containers/SignInForm/rules.ts","containers/SignInForm/SignInForm.tsx","containers/Layout/components/Navigation/Navigation.tsx","containers/Layout/components/LeftSideBar/LeftSideBar.tsx","containers/Layout/Layout.tsx","containers/profileContainer/rules.ts","containers/profileContainer/useProfile.ts","containers/profileContainer/profileContainer.tsx","pages/Profile/Profile.tsx"],"names":["rules","yup","username","required","firstname","lastname","email","password","min","max","useStyles","makeStyles","signup__wrapper","width","maxWidth","margin","signup__btn","marginBottom","SignUpForm","dispatch","useDispatch","isPending","useSelector","userSelectors","getAuthPending","useFormik","initialValues","validateOnChange","validationSchema","enableReinitialize","onSubmit","formValues","userActions","userSignUpRequest","setSubmitting","handleSubmit","values","errors","handleChange","isSubmitting","classes","Paper","elevation","className","CustomInput","id","label","error","inputProps","name","disabled","onChange","value","type","to","signin__wrapper","signin__btn","signin__link","marginTop","userSignInRequest","Navigation","MenuList","Object","NAVIGATION","map","href","title","MenuItem","LeftSideBar","history","useHistory","onClick","localStorage","removeItem","userLogOut","push","Layout","children","useProfile","user","getUserData","userUpdateRequest","profile__btn","ProfileContainer","console","log","Profile"],"mappings":"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","file":"static/js/5.50fecae9.chunk.js","sourcesContent":["import * as yup from 'yup';\nimport { Values } from './SignUpForm';\n\nconst rules = yup.object<Values>({\n  username: yup.string().required('Username is required'),\n  firstname: yup.string().required('First name is required'),\n  lastname: yup.string().required('Last name is required'),\n  email: yup.string().email('Email is not valid').required('Email is required'),\n  password: yup.string()\n    .required('Password is required')\n    .min(6, 'Password is too short')\n    .max(30, 'Password is too long'),\n});\n\nexport default rules;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Form, CustomButton } from '../../components';\nimport { userActions, userSelectors } from '../../state/user';\nimport rules from './rules';\nimport './style.sass';\n\nexport interface Values {\n    username: string;\n    firstname: string;\n    lastname: string;\n    email: string;\n    password: string;\n}\n\ninterface Props {\n    initialValues?: Values;\n    validateOnChange?: boolean;\n    onSubmit?: (v: Values) => Promise<void>\n}\n\nconst useStyles = makeStyles({\n  signup__wrapper: {\n    width: 'auto',\n    maxWidth: '400px',\n    margin: '0 auto',\n  },\n  signup__btn: {\n    marginBottom: '10px',\n  },\n});\n\nconst SignUpForm: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const isPending = useSelector(userSelectors.getAuthPending);\n  const {\n    handleSubmit,\n    values,\n    errors,\n    handleChange,\n    setSubmitting,\n    isSubmitting,\n  } = useFormik<Values>({\n    initialValues: {\n      username: '',\n      firstname: '',\n      lastname: '',\n      email: '',\n      password: '',\n    },\n    validateOnChange: false,\n    validationSchema: rules,\n    enableReinitialize: true,\n    onSubmit: (formValues) => {\n      dispatch(userActions.userSignUpRequest(formValues));\n      setSubmitting(!isPending);\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Paper\n      elevation={3}\n      className={classes.signup__wrapper}\n    >\n      <form className=\"signup__form\" onSubmit={handleSubmit}>\n        <div className=\"signup__header\">\n          <h2 className=\"signup__title\">Sign Up</h2>\n        </div>\n        <div className=\"signup__body\">\n          <div className=\"signup__row\">\n            <Form.CustomInput\n              id=\"username\"\n              label=\"Username\"\n              error={errors.username || ''}\n              inputProps={{\n                name: 'username',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.username,\n              }}\n            />\n          </div>\n          <div className=\"signup__row\">\n            <Form.CustomInput\n              id=\"firstname\"\n              label=\"First name\"\n              error={errors.firstname || ''}\n              inputProps={{\n                name: 'firstname',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.firstname,\n              }}\n            />\n          </div>\n          <div className=\"signup__row\">\n            <Form.CustomInput\n              id=\"lastname\"\n              label=\"Last name\"\n              error={errors.lastname || ''}\n              inputProps={{\n                name: 'lastname',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.lastname,\n              }}\n            />\n          </div>\n          <div className=\"signup__row\">\n            <Form.CustomInput\n              id=\"email\"\n              label=\"Email\"\n              error={errors.email || ''}\n              inputProps={{\n                name: 'email',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.email,\n              }}\n            />\n          </div>\n          <div className=\"signup__row\">\n            <Form.CustomInput\n              id=\"password\"\n              label=\"Password\"\n              error={errors.password || ''}\n              inputProps={{\n                name: 'password',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.password,\n                type: 'password',\n              }}\n            />\n          </div>\n          <div className=\"signup__row\">\n            <CustomButton\n              type=\"submit\"\n              className={classes.signup__btn}\n            >\n              Submit\n            </CustomButton>\n            <NavLink\n              to=\"/auth/signin\"\n              className=\"signup__link\"\n            >\n              I already sign in\n            </NavLink>\n          </div>\n        </div>\n      </form>\n    </Paper>\n  );\n};\n\nexport default SignUpForm;\n","import * as yup from 'yup';\nimport { Values } from './SignInForm';\n\nconst rules = yup.object<Values>({\n  username: yup.string().required('Username is required'),\n  password: yup.string()\n    .required('Password is required')\n    .min(6, 'Password is too short')\n    .max(30, 'Password is too long'),\n});\n\nexport default rules;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport { Form, CustomButton } from '../../components';\nimport { userActions, userSelectors } from '../../state/user';\nimport rules from './rules';\nimport './style.sass';\n\nexport interface Values {\n    username: string;\n    password: string;\n}\n\ninterface Props {\n    initialValues?: Values;\n    validateOnChange?: boolean;\n    onSubmit?: (v: Values) => Promise<void>\n}\n\nconst useStyles = makeStyles({\n  signin__wrapper: {\n    width: 'auto',\n    maxWidth: '400px',\n    margin: '0 auto',\n  },\n  signin__btn: {\n    marginBottom: '10px',\n  },\n  signin__link: {\n    marginTop: '10px',\n  },\n});\n\nconst SignUpForm: React.FC<Props> = () => {\n  const dispatch = useDispatch();\n  const isPending = useSelector(userSelectors.getAuthPending);\n  const {\n    handleSubmit,\n    values,\n    errors,\n    handleChange,\n    setSubmitting,\n    isSubmitting,\n  } = useFormik<Values>({\n    initialValues: {\n      username: '',\n      password: '',\n    },\n    validateOnChange: false,\n    validationSchema: rules,\n    enableReinitialize: true,\n    onSubmit: (formValues) => {\n      dispatch(userActions.userSignInRequest(formValues));\n      setSubmitting(!isPending);\n    },\n  });\n  const classes = useStyles();\n  return (\n    <Paper\n      elevation={3}\n      className={classes.signin__wrapper}\n    >\n      <form className=\"signin__form\" onSubmit={handleSubmit}>\n        <div className=\"signin__header\">\n          <h2 className=\"signin__title\">Sign In</h2>\n        </div>\n        <div className=\"signin__body\">\n          <div className=\"signin__row\">\n            <Form.CustomInput\n              id=\"username\"\n              label=\"Username\"\n              error={errors.username || ''}\n              inputProps={{\n                name: 'username',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.username,\n              }}\n            />\n          </div>\n          <div className=\"signin__row\">\n            <Form.CustomInput\n              id=\"password\"\n              label=\"Password\"\n              error={errors.password || ''}\n              inputProps={{\n                name: 'password',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.password,\n                type: 'password',\n              }}\n            />\n          </div>\n          <div className=\"signin__row\">\n            <CustomButton\n              type=\"submit\"\n              className={classes.signin__btn}\n            >\n              Submit\n            </CustomButton>\n            <NavLink\n              to=\"/auth/signup\"\n              className=\"signin__link\"\n            >\n              I`m not signed up yet\n            </NavLink>\n          </div>\n        </div>\n      </form>\n    </Paper>\n  );\n};\n\nexport default SignUpForm;\n","import React from 'react';\nimport { MenuItem, MenuList } from '@material-ui/core';\nimport { NavLink } from 'react-router-dom';\nimport { NAVIGATION } from '../../../../constants';\nimport './style.sass';\n\nconst Navigation: React.FC = () => (\n  <nav className=\"main-nav\">\n    <MenuList>\n      {\n        Object.values(NAVIGATION).map(({ href, title }) => (\n          <MenuItem>\n            <NavLink className=\"main-nav__link\" to={href}>{title}</NavLink>\n          </MenuItem>\n        ))\n      }\n    </MenuList>\n  </nav>\n);\n\nexport default Navigation;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport Navigation from '../Navigation/Navigation';\nimport './style.sass';\nimport { userActions } from '../../../../state/user';\nimport { CustomButton } from '../../../../components';\n\nconst LeftSideBar: React.FC = () => {\n  const dispatch = useDispatch();\n  const history = useHistory();\n  return (\n    <>\n      <aside className=\"left-sidebar\">\n        <Navigation />\n        <div className=\"left-sidebar__log-out\">\n          <CustomButton\n            type=\"button\"\n            onClick={() => {\n              localStorage.removeItem('authToken');\n              dispatch(userActions.userLogOut());\n              history.push('/');\n            }}\n          >\n            Log out\n          </CustomButton>\n        </div>\n        <div className=\"left-sidebar__copyright\">\n          <p className=\"left-sidebar__copyright--text\">Created by Mykhalchuk Yaroslav</p>\n        </div>\n      </aside>\n    </>\n  );\n};\n\nexport default LeftSideBar;\n","import React from 'react';\nimport { LeftSideBar } from './components';\nimport './style.sass';\n\ntype ILayout = {\n    children: React.ReactElement | React.ReactNode\n}\n\nconst Layout: React.FC<ILayout> = ({ children }: ILayout) => (\n  <>\n    <div className=\"layout\">\n      <LeftSideBar />\n      <section className=\"main\">\n        <main className=\"main-container\">\n          {children}\n        </main>\n      </section>\n    </div>\n  </>\n);\n\nexport default Layout;\n","import * as yup from 'yup';\nimport { Values } from './useProfile';\n\nconst rules = yup.object<Values>({\n  username: yup.string().required('Username is required'),\n  firstname: yup.string().required('First name is required'),\n  lastname: yup.string().required('Last name is required'),\n  email: yup.string().required('Email is required'),\n});\n\nexport default rules;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\nimport * as React from 'react';\nimport { userActions, userSelectors } from '../../state/user';\nimport rules from './rules';\n\nexport interface Values {\n    username: string,\n    firstname: string,\n    lastname: string,\n    email: string,\n}\n\ntype IUser = {\n    username?: string | undefined,\n    firstname?: string | undefined,\n    lastname?: string | undefined,\n    email?: string | undefined,\n}\n\ninterface IUseProfile {\n    dispatch: any,\n    user: IUser,\n    isPending: boolean\n    handleSubmit: (e?: React.FormEvent<HTMLFormElement>) => void,\n    values: IUser,\n    errors: IUser,\n    handleChange: (e: React.ChangeEvent<any>) => void,\n    setSubmitting: (isSubmitting: boolean) => void,\n    isSubmitting: boolean,\n}\n\nconst useProfile = (): IUseProfile => {\n  const dispatch = useDispatch();\n  const user = useSelector(userSelectors.getUserData);\n  const isPending = useSelector(userSelectors.getAuthPending);\n  const {\n    handleSubmit,\n    values,\n    errors,\n    handleChange,\n    setSubmitting,\n    isSubmitting,\n  } = useFormik<Values>({\n    initialValues: {\n      username: user.username,\n      firstname: user.firstname,\n      lastname: user.lastname,\n      email: user.email,\n    },\n    validateOnChange: false,\n    validationSchema: rules,\n    enableReinitialize: true,\n    onSubmit: (formValues) => {\n      dispatch(userActions.userUpdateRequest({ ...formValues, id: user.id }));\n      setSubmitting(isPending);\n    },\n  });\n  return {\n    dispatch,\n    user,\n    isPending,\n    handleSubmit,\n    values,\n    errors,\n    handleChange,\n    setSubmitting,\n    isSubmitting,\n  };\n};\n\nexport default useProfile;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Layout from '../Layout/Layout';\nimport { Form, CustomButton } from '../../components';\nimport useProfile from './useProfile';\nimport './style.sass';\n\nconst useStyles = makeStyles({\n  profile__btn: {\n    width: '100%',\n  },\n});\n\nconst ProfileContainer: React.FC = () => {\n  const {\n    handleSubmit,\n    values,\n    errors,\n    handleChange,\n    isSubmitting,\n  } = useProfile();\n  console.log(isSubmitting);\n  const classes = useStyles();\n  return (\n    <Layout>\n      <form className=\"profile__form\" onSubmit={handleSubmit}>\n        <div className=\"profile__header\">\n          <h2 className=\"profile__title\">Profile</h2>\n        </div>\n        <div className=\"profile__body\">\n          <div className=\"profile__row\">\n            <Form.CustomInput\n              id=\"username\"\n              label=\"Username\"\n              error={errors.username || ''}\n              inputProps={{\n                name: 'username',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.username,\n              }}\n            />\n          </div>\n          <div className=\"profile__row\">\n            <Form.CustomInput\n              id=\"firstname\"\n              label=\"First name\"\n              error={errors.firstname || ''}\n              inputProps={{\n                name: 'firstname',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.firstname,\n              }}\n            />\n          </div>\n          <div className=\"profile__row\">\n            <Form.CustomInput\n              id=\"lastname\"\n              label=\"Last name\"\n              error={errors.lastname || ''}\n              inputProps={{\n                name: 'lastname',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.lastname,\n              }}\n            />\n          </div>\n          <div className=\"profile__row\">\n            <Form.CustomInput\n              id=\"email\"\n              label=\"Email\"\n              error={errors.email || ''}\n              inputProps={{\n                name: 'firstname',\n                disabled: isSubmitting,\n                onChange: handleChange,\n                value: values.email,\n                type: 'email',\n              }}\n            />\n          </div>\n          <div className=\"profile__row\">\n            <CustomButton\n              type=\"submit\"\n              className={classes.profile__btn}\n            >\n              Save\n            </CustomButton>\n          </div>\n        </div>\n      </form>\n    </Layout>\n  );\n};\n\nexport default ProfileContainer;\n","import React from 'react';\nimport { ProfileContainer } from '../../containers';\n\nconst Profile: React.FC = () => (\n  <ProfileContainer />\n);\n\nexport default Profile;\n"],"sourceRoot":""}