{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx","state/index.ts","configureStore.ts","state/user/types.ts","state/user/actions.ts","state/user/selectors.ts","utils/helpers/pushNotifications.tsx","utils/requestHelpers/api.ts","utils/requestHelpers/authenticationRequestHelpers.ts","utils/requestHelpers/userRequestHelpers.ts","state/user/operations.ts","state/user/reducers.ts","state/user/index.ts","components/Header/Header.tsx","components/Form/CustomInput/CustomInput.tsx","components/CustomButton/CustomButton.tsx","components/PrivateRoute/PrivateRoute.tsx","components/Loader/Loader.tsx","components/Routing/Routing.tsx","components/ModalWindow/ModalWindow.tsx","constants/api.ts","constants/navigation.ts","constants/user.ts"],"names":["App","props","store","persistor","loading","history","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","rootSaga","all","userSaga","rootReducer","combineReducers","router","connectRouter","user","userReducer","persistConfig","key","storage","whitelist","sagaMiddleware","createSagaMiddleware","createBrowserHistory","persistedReducer","persistReducer","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","run","persistStore","createActions","userTypes","userSignUpRequest","userSignInRequest","userAuthenticationSuccess","userAuthenticationError","userLogOut","usersListRequest","usersListSuccess","usersListFailure","userUpdateRequest","userUpdateSuccess","userUpdateFailure","userDeleteRequest","userDeleteSuccess","userDeleteFailure","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserFailure","getAuthPending","createSelector","pathOr","identity","getAuthError","getUserData","id","username","firstname","lastname","email","getUsersList","users","limit","page","count","PushNotifications","content","options","toast","success","warning","warn","info","getParamsUrl","params","Object","keys","map","join","getValueFromQueryParams","queryParams","values","toString","createAxiosInstance","headers","route","method","axios","baseURL","baseUrlApi","createRequestApi","token","localStorage","getItem","Authorization","normalizeRequestData","res","signUpRequest","signInRequest","getUsersListRequest","updateUserRequest","deleteUserRequest","getCurrentUser","singUp","singIn","getListUsers","updateUser","deleteUser","apiHelpers","take","action","call","authenticationRequestHelpers","payload","put","setItem","push","response","data","userRequestHelpers","fork","handleActions","state","pending","userData","list","uniq","filter","Header","className","to","CustomInput","label","inputProps","useState","width","setWidth","labelRef","useRef","useEffect","current","offsetWidth","FormControl","fullWidth","variant","InputLabel","htmlFor","ref","OutlinedInput","type","labelWidth","memo","children","onClick","Button","color","PrivateRoute","Component","component","exact","path","useLocation","pathname","from","Loader","Auth","lazy","Profile","ErrorPage","Users","Routing","fallback","strict","slice","makeStyles","modal_window__close_btn","position","backgroundColor","border","padding","boxShadow","right","modal_window__close_icon","process","NAVIGATION","USERS","href","title","PROFILE","USER_FIELDS","field"],"mappings":"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","file":"static/js/main.61bade48.chunk.js","sourcesContent":["import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/es/integration/react';\nimport { ConnectedRouter } from 'connected-react-router';\n\nimport { store, persistor, history } from './configureStore';\nimport { Routing } from './components';\nimport './utils/styles/style.sass';\n\nconst App: React.FC = (props) => (\n  <Provider store={store}>\n    <PersistGate persistor={persistor} loading={null}>\n      <ConnectedRouter history={history}>\n        <Routing />\n      </ConnectedRouter>\n    </PersistGate>\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { combineReducers } from 'redux';\nimport { all } from 'redux-saga/effects';\nimport { connectRouter } from 'connected-react-router';\n\nimport userReducer, { userSaga } from './user';\n// import categoriesReducer, { categoriesSaga } from './categories';\n// import postsReducer, { postsSaga } from './posts';\n\ninterface IHistory {\n  history?: any,\n}\n\nconst rootReducer = (history: IHistory): any => combineReducers({\n  router: connectRouter(history as any),\n  user: userReducer,\n});\n\nexport const rootSaga = function* () {\n  yield all([\n    userSaga(),\n    // categoriesSaga(),\n    // postsSaga(),\n  ]);\n};\n\nexport default rootReducer;\n","import {\n  createStore, applyMiddleware,\n} from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport rootReducer, { rootSaga } from './state';\n\nconst persistConfig = {\n  key: 'user',\n  storage,\n  whitelist: ['userData'],\n};\n\nconst sagaMiddleware = createSagaMiddleware();\nconst history = createBrowserHistory();\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history as any));\n\nconst store = createStore(\n  persistedReducer,\n  composeWithDevTools(\n    applyMiddleware(\n      sagaMiddleware,\n      routerMiddleware(history),\n    ),\n  ),\n);\n\nsagaMiddleware.run(rootSaga);\n\nconst persistor = persistStore(store as any);\n\nexport {\n  store,\n  persistor,\n  history,\n};\n","export default {\n  USER_SIGN_UP_REQUEST: 'USER_SIGN_UP_REQUEST',\n  USER_SIGN_IN_REQUEST: 'USER_SIGN_IN_REQUEST',\n  USER_AUTHENTICATION_SUCCESS: 'USER_AUTHENTICATION_SUCCESS',\n  USER_AUTHENTICATION_ERROR: 'USER_AUTHENTICATION_ERROR',\n  USER_LOG_OUT: 'USER_LOG_OUT',\n\n  GET_CURRENT_USER_REQUEST: 'GET_CURRENT_USER_REQUEST',\n  GET_CURRENT_USER_SUCCESS: 'GET_CURRENT_USER_SUCCESS',\n  GET_CURRENT_USER_FAILURE: 'GET_CURRENT_USER_FAILURE',\n\n  USERS_LIST_REQUEST: 'USERS_LIST_REQUEST',\n  USERS_LIST_SUCCESS: 'USERS_LIST_SUCCESS',\n  USERS_LIST_FAILURE: 'USERS_LIST_FAILURE',\n\n  USER_UPDATE_REQUEST: 'USER_UPDATE_REQUEST',\n  USER_UPDATE_SUCCESS: 'USER_UPDATE_SUCCESS',\n  USER_UPDATE_FAILURE: 'USER_UPDATE_FAILURE',\n\n  USER_DELETE_REQUEST: 'USER_DELETE_REQUEST',\n  USER_DELETE_SUCCESS: 'USER_DELETE_SUCCESS',\n  USER_DELETE_FAILURE: 'USER_DELETE_FAILURE',\n};\n","import { createActions } from 'redux-actions';\n\nimport userTypes from './types';\n\nexport const {\n  userSignUpRequest,\n  userSignInRequest,\n  userAuthenticationSuccess,\n  userAuthenticationError,\n  userLogOut,\n  usersListRequest,\n  usersListSuccess,\n  usersListFailure,\n  userUpdateRequest,\n  userUpdateSuccess,\n  userUpdateFailure,\n  userDeleteRequest,\n  userDeleteSuccess,\n  userDeleteFailure,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserFailure,\n} = createActions(\n  userTypes.USER_SIGN_UP_REQUEST,\n  userTypes.USER_SIGN_IN_REQUEST,\n  userTypes.USER_AUTHENTICATION_SUCCESS,\n  userTypes.USER_AUTHENTICATION_ERROR,\n  userTypes.USER_LOG_OUT,\n  userTypes.USERS_LIST_REQUEST,\n  userTypes.USERS_LIST_SUCCESS,\n  userTypes.USERS_LIST_FAILURE,\n  userTypes.USER_UPDATE_REQUEST,\n  userTypes.USER_UPDATE_SUCCESS,\n  userTypes.USER_UPDATE_FAILURE,\n  userTypes.USER_DELETE_REQUEST,\n  userTypes.USER_DELETE_SUCCESS,\n  userTypes.USER_DELETE_FAILURE,\n  userTypes.GET_CURRENT_USER_REQUEST,\n  userTypes.GET_CURRENT_USER_SUCCESS,\n  userTypes.GET_CURRENT_USER_FAILURE,\n);\n","import { createSelector } from 'reselect';\nimport { pathOr, identity, path } from 'ramda';\n\nconst getAuthPending = createSelector(pathOr(false, ['user', 'pending']), identity);\nconst getAuthError = createSelector(pathOr(null, ['user', 'error']), identity);\nconst getUserData = createSelector(pathOr({\n  id: null,\n  username: '',\n  firstname: '',\n  lastname: '',\n  email: '',\n}, ['user', 'userData']), identity);\nconst getUsersList = createSelector(pathOr({\n  users: [],\n  limit: 10,\n  page: 0,\n  count: 0,\n}, ['user', 'list']), identity);\n\nexport {\n  getAuthPending,\n  getAuthError,\n  getUserData,\n  getUsersList,\n};\n","import { toast, ToastOptions } from 'react-toastify';\nimport { ReactText } from 'react';\n\ntype TNotifications = {\n  content: string | null | number,\n  options?: ToastOptions\n}\n\nconst PushNotifications = {\n  error: ({ content, options = {} } : TNotifications): ReactText => toast.error(content, options),\n  // eslint-disable-next-line max-len\n  success: ({ content, options = {} } : TNotifications): ReactText => toast.success(content, options),\n  warning: ({ content, options = {} } : TNotifications): ReactText => toast.warn(content, options),\n  info: ({ content, options = {} } : TNotifications): ReactText => toast.info(content, options),\n};\n\nexport default PushNotifications;\n","import axios from 'axios';\nimport { pathOr } from 'ramda';\nimport { baseUrlApi } from '../../constants';\nimport { IParams, IRes } from './interfaces';\n\nconst HTTP_GET = 'get';\n\n// TODO: needed refactoring\n\nexport const getParamsUrl = (params?: IParams) : string => (params ? `${Object.keys(params).map((key: string) => `${key}=${params[key]}`).join('&')}` : '');\n\nconst getValueFromQueryParams = (queryParams?: IParams): string => (queryParams ? Object.values(queryParams)[0].toString() : '');\n\nconst createAxiosInstance = (\n  headers = {},\n  route: string,\n  method: any,\n  params?: IParams,\n  queryParams?: IParams,\n) => axios({\n  baseURL: `${baseUrlApi}${route}${getValueFromQueryParams(queryParams)}`,\n  headers,\n  method,\n  [method !== HTTP_GET ? 'data' : 'params']: params,\n});\n\n// eslint-disable-next-line max-len\nexport const createRequestApi: CallableFunction = (method: any, route: string) => (params: IParams, queryParams: IParams) => {\n  const token = localStorage.getItem('authToken');\n  if (token) {\n    const headers = {\n      Authorization: `${token}`,\n    };\n    return createAxiosInstance(headers, route, method, params, queryParams);\n  }\n  return createAxiosInstance({}, route, method, params, queryParams);\n};\n\nexport const normalizeRequestData: CallableFunction = (res: IRes) => pathOr({}, ['data'], res);\n","import { createRequestApi } from './api';\n\nconst signUpRequest = createRequestApi('post', 'auth/signup/');\nconst signInRequest = createRequestApi('post', 'auth/signin/');\n\nexport {\n  signUpRequest,\n  signInRequest,\n};\n","import { createRequestApi } from './api';\n\nconst getUsersListRequest = createRequestApi('get', 'users');\nconst updateUserRequest = createRequestApi('put', 'users/');\nconst deleteUserRequest = createRequestApi('delete', 'users/');\nconst getCurrentUser = createRequestApi('get', 'users/current-user');\n\nexport {\n  getUsersListRequest,\n  updateUserRequest,\n  deleteUserRequest,\n  getCurrentUser,\n};\n","import {\n  call, put, fork, take,\n} from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport userTypes from './types';\nimport { PushNotifications } from '../../utils/helpers';\nimport {\n  userAuthenticationSuccess,\n  userAuthenticationError,\n  usersListSuccess,\n  usersListFailure,\n  userUpdateSuccess,\n  userUpdateFailure,\n  userDeleteSuccess,\n  userDeleteFailure,\n  getCurrentUserSuccess,\n  getCurrentUserFailure,\n} from './actions';\nimport { authenticationRequestHelpers, apiHelpers, userRequestHelpers } from '../../utils/requestHelpers';\n\nconst { normalizeRequestData } = apiHelpers;\n\nfunction* singUp() {\n  while (true) {\n    try {\n      const action = yield take(userTypes.USER_SIGN_UP_REQUEST);\n      const res = normalizeRequestData(yield call(authenticationRequestHelpers.signUpRequest,\n        { ...action.payload }));\n      yield put(userAuthenticationSuccess({ ...res }));\n      yield localStorage.setItem('authToken', res.token);\n      yield put(push('/profile'));\n    } catch (e) {\n      yield put(userAuthenticationError());\n      PushNotifications.error({ content: e.response.data.error });\n    }\n  }\n}\n\nfunction* singIn() {\n  while (true) {\n    try {\n      const action = yield take(userTypes.USER_SIGN_IN_REQUEST);\n      const res = normalizeRequestData(yield call(authenticationRequestHelpers.signInRequest,\n        { ...action.payload }));\n      yield put(userAuthenticationSuccess({ ...res }));\n      yield localStorage.setItem('authToken', res.token);\n      yield put(push('/profile'));\n    } catch (e) {\n      yield put(userAuthenticationError());\n      PushNotifications.error({ content: e.response.data.error });\n    }\n  }\n}\n\nfunction* logOut() {\n  yield take(userTypes.USER_LOG_OUT);\n  yield push('/');\n  localStorage.removeItem('authToken');\n}\n\nfunction* getListUsers() {\n  while (true) {\n    try {\n      const action = yield take(userTypes.USERS_LIST_REQUEST);\n      const res = normalizeRequestData(yield call(userRequestHelpers.getUsersListRequest,\n        { ...action.payload }));\n      yield put(usersListSuccess({ ...res }));\n    } catch (e) {\n      yield put(usersListFailure());\n      PushNotifications.error({ content: e.response.data.error });\n    }\n  }\n}\n\nfunction* updateUser() {\n  while (true) {\n    try {\n      const action = yield take(userTypes.USER_UPDATE_REQUEST);\n      const res = normalizeRequestData(yield call(userRequestHelpers.updateUserRequest,\n        { ...action.payload }, { id: action.payload.id }));\n      yield put(userUpdateSuccess({ ...res }));\n    } catch (e) {\n      yield put(userUpdateFailure());\n      PushNotifications.error({ content: e.response.data.error });\n    }\n  }\n}\n\nfunction* deleteUser() {\n  while (true) {\n    try {\n      const action = yield take(userTypes.USER_DELETE_REQUEST);\n      const res = normalizeRequestData(yield call(userRequestHelpers.deleteUserRequest,\n        {}, { id: action.payload.id }));\n      yield put(userDeleteSuccess(({ ...res })));\n    } catch (e) {\n      yield put(userDeleteFailure());\n      PushNotifications.error({ content: e.response.data.error });\n    }\n  }\n}\n\nfunction* getCurrentUser() {\n  while (true) {\n    try {\n      yield take(userTypes.GET_CURRENT_USER_REQUEST);\n      const res = normalizeRequestData(yield call(userRequestHelpers.getCurrentUser));\n      yield put((getCurrentUserSuccess({ ...res })));\n    } catch (e) {\n      yield put(getCurrentUserFailure());\n      PushNotifications.error({ content: e.response.data.error });\n    }\n  }\n}\n\n// eslint-disable-next-line func-names\nexport default function* (): Generator {\n  yield fork(singUp);\n  yield fork(singIn);\n  yield fork(getListUsers);\n  yield fork(updateUser);\n  yield fork(deleteUser);\n  yield fork(getCurrentUser);\n}\n","import { handleActions } from 'redux-actions';\nimport { uniq } from 'ramda';\nimport { IAction, UserState } from '../../interfaces/userInterfaces';\nimport userTypes from './types';\n\nconst initialState: UserState = {\n  userData: { },\n  pending: false,\n  list: {\n    users: [],\n    limit: 10,\n    page: 0,\n    count: 0,\n  },\n};\n\nconst userReducer = handleActions<UserState, string>({\n  [userTypes.USER_SIGN_IN_REQUEST]: (state) => ({\n    ...state,\n    pending: true,\n  }),\n  [userTypes.USER_SIGN_UP_REQUEST]: (state) => ({\n    ...state,\n    pending: true,\n  }),\n  [userTypes.USER_AUTHENTICATION_SUCCESS]: (state, action: IAction) => ({\n    ...state,\n    userData: action.payload.userData,\n    pending: false,\n  }),\n  [userTypes.USER_AUTHENTICATION_ERROR]: (state) => ({\n    ...state,\n    pending: false,\n  }),\n  [userTypes.USER_LOG_OUT]: (state) => ({\n    ...state,\n    userData: {},\n  }),\n  [userTypes.USER_UPDATE_REQUEST]: (state) => ({\n    ...state,\n    pending: true,\n  }),\n  [userTypes.USER_UPDATE_SUCCESS]: (state, action: IAction) => ({\n    ...state,\n    userData: action.payload.userData,\n    pending: false,\n  }),\n  [userTypes.USERS_LIST_REQUEST]: (state) => ({\n    ...state,\n    pending: true,\n  }),\n  [userTypes.USERS_LIST_SUCCESS]: (state, action: IAction) => ({\n    ...state,\n    list: {\n      users: uniq([...state.list.users, ...action.payload.users]),\n      limit: action.payload.limit,\n      count: action.payload.count,\n      page: action.payload.page,\n    },\n    pending: false,\n  }),\n  [userTypes.USERS_LIST_FAILURE]: (state) => ({\n    ...state,\n    pending: false,\n  }),\n  [userTypes.USER_DELETE_REQUEST]: (state) => ({\n    ...state,\n    pending: true,\n  }),\n  [userTypes.USER_DELETE_SUCCESS]: (state, action: IAction) => ({\n    ...state,\n    pending: false,\n    list: {\n      users: [...state.list.users.filter((id) => id === action.payload.user)],\n      limit: state.list.limit,\n      page: state.list.page,\n      count: state.list.count,\n    },\n  }),\n  [userTypes.USER_DELETE_FAILURE]: (state) => ({\n    ...state,\n    pending: false,\n  }),\n  [userTypes.GET_CURRENT_USER_REQUEST]: (state) => ({\n    ...state,\n    pending: true,\n  }),\n  [userTypes.GET_CURRENT_USER_SUCCESS]: (state, action: IAction) => ({\n    ...state,\n    userData: action.payload.userData,\n    pending: false,\n  }),\n  [userTypes.GET_CURRENT_USER_FAILURE]: (state) => ({\n    ...state,\n    pending: false,\n  }),\n}, {\n  ...initialState,\n});\n\nexport default userReducer;\n","import userTypes from './types';\nimport * as userActions from './actions';\nimport * as userSelectors from './selectors';\nimport * as userInterfaces from './interfaces';\nimport userSaga from './operations';\nimport userReducer from './reducers';\n\nexport {\n  userTypes,\n  userActions,\n  userSelectors,\n  userSaga,\n  userInterfaces,\n};\nexport default userReducer;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.sass';\n\nconst Header: React.FC = () => (\n  <header className=\"header\">\n    <div className=\"header__row\">\n      <Link className=\"header__link\" to=\"/\">Web library</Link>\n    </div>\n  </header>\n);\n\nexport default Header;\n","import React, {\n  useRef, useState, useEffect, MutableRefObject,\n} from 'react';\nimport { OutlinedInput, InputLabel, FormControl } from '@material-ui/core';\nimport './style.sass';\n\ninterface IObject {\n    [prop: string]: any;\n}\n\ninterface IProps {\n    label: string;\n    id: string;\n    error: string;\n    inputProps: IObject;\n}\n\nexport const CustomInput: React.FC<IProps> = ({\n  label, id, error, inputProps,\n}: IProps) => {\n  const [width, setWidth] = useState(0);\n  const labelRef = useRef() as MutableRefObject<HTMLLabelElement>;\n  useEffect(() => setWidth(labelRef.current.offsetWidth), [labelRef]);\n  return (\n    <div className=\"input__wrapper\">\n      <FormControl fullWidth variant=\"outlined\">\n        <InputLabel\n          htmlFor={id}\n          ref={labelRef}\n        >\n          {label}\n        </InputLabel>\n        <OutlinedInput\n          type=\"text\"\n          id={id}\n          {...inputProps}\n          labelWidth={width}\n        />\n        {error && <span className=\"input__error\">{error}</span>}\n      </FormControl>\n    </div>\n  );\n};\n","import React, { memo } from 'react';\nimport { Button } from '@material-ui/core';\n// eslint-disable-next-line react/require-default-props\ntype BProps = {\n    type?: 'submit' | 'reset' | 'button';\n    onClick?: () => void | CallableFunction;\n    children: React.ReactNode;\n    className?: string,\n}\n\nconst CustomButton: React.FC<BProps> = ({\n  children, type, onClick, className,\n}: BProps) => (\n  <Button\n    type={type || 'submit'}\n    className={`custom__button ${className}`}\n    onClick={onClick}\n    variant=\"contained\"\n    color=\"primary\"\n  >\n    {children}\n  </Button>\n);\n\nexport default memo(CustomButton);\n","import React from 'react';\nimport { Route, Redirect, useLocation } from 'react-router-dom';\nimport { IPrivateRoute } from './interfaces';\n\nconst PrivateRoute: React.FC<IPrivateRoute> = ({\n  component: Component, exact, path, ...props\n}: IPrivateRoute) => {\n  const location = useLocation();\n  return (\n    localStorage.getItem('authToken') ? (\n      <Route exact={exact} path={path}>\n        {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n        <Component {...props} />\n      </Route>\n    ) : (\n      <Redirect to={{\n        pathname: '/auth/signin',\n        state: { from: location },\n      }}\n      />\n    )\n  );\n};\n\nexport default PrivateRoute;\n","import React from 'react';\nimport './style.sass';\n\nconst Loader: React.FC = () => (\n  <div className=\"loader\">\n    <div className=\"circle\" />\n  </div>\n);\n\nexport default Loader;\n","import React, { Suspense, lazy } from 'react';\nimport {\n  Switch, Route, Redirect, useLocation,\n} from 'react-router-dom';\nimport PrivateRoute from '../PrivateRoute/PrivateRoute';\nimport Loader from '../Loader/Loader';\n\nconst Auth = lazy(() => import('../../pages/Auth/Auth'));\nconst Profile = lazy(() => import('../../pages/Profile/Profile'));\nconst ErrorPage = lazy(() => import('../../pages/ErrorPage/ErrorPage'));\nconst Users = lazy(() => import('../../pages/Users/Users'));\n\nconst Routing: React.FC = () => {\n  const location = useLocation();\n  const fixUrl = () => (location.pathname.slice(-1) !== '/' ? <Redirect to={`${location.pathname}/`} /> : <></>);\n  return (\n    <Suspense fallback={<Loader />}>\n      <Switch>\n        <Route exact strict path=\"/:url\" render={fixUrl} />\n        <Route path=\"/auth/\" component={Auth} />\n        <PrivateRoute exact path=\"/users\" component={Users} />\n        <PrivateRoute exact path=\"/profile\" component={Profile} />\n        <PrivateRoute exact path=\"/\" component={Profile} />\n        <PrivateRoute exact path=\"*\" component={ErrorPage} />\n      </Switch>\n    </Suspense>\n  );\n};\n\nexport default Routing;\n","import React, { ReactPortal, useLayoutEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactDOM from 'react-dom';\nimport CloseIcon from '@material-ui/icons/Close';\nimport CustomButton from '../CustomButton/CustomButton';\nimport './style.sass';\n\ntype MWProps = {\n    title?: string,\n    isOpen?: boolean,\n    onClose?: () => void | CallableFunction,\n    children?: JSX.Element\n}\n\nconst useStyles = makeStyles({\n  modal_window__close_btn: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    border: 'none',\n    padding: 0,\n    boxShadow: 'none',\n    right: '0',\n    '&:hover': {\n      backgroundColor: 'transparent',\n      border: 'none',\n      padding: 0,\n      boxShadow: 'none',\n    },\n  },\n  modal_window__close_icon: {\n    '&:hover': {\n      color: 'gainsboro',\n    },\n  },\n});\n\nconst ModalWindow = ({\n  title, isOpen, onClose, children,\n}: MWProps): ReactPortal => {\n  useLayoutEffect(() => {\n    document.body.style.overflow = isOpen ? 'hidden' : 'auto';\n  }, [isOpen]);\n  const classes = useStyles();\n  return (\n      isOpen && ReactDOM.createPortal(\n        <div className=\"modal-window\">\n          <div className=\"modal-window__wrapper\">\n            <div className=\"modal-window__header\">\n              <h3 className=\"modal-window__title\">{title || 'Title'}</h3>\n              <CustomButton onClick={onClose} className={classes.modal_window__close_btn}>\n                <CloseIcon className={classes.modal_window__close_icon} />\n              </CustomButton>\n              <div className=\"modal-window__body\">{children}</div>\n            </div>\n          </div>\n        </div>,\n        document.body,\n      )\n  ) as ReactPortal;\n};\n\nexport default ModalWindow;\n","export const baseUrlApi = process.env.REACT_APP_API_URL;\n","export const NAVIGATION = {\n  USERS: {\n    href: '/users',\n    title: 'Users',\n  },\n  PROFILE: {\n    href: '/profile',\n    title: 'Profile',\n  },\n};\n","export const USER_FIELDS = [\n  {\n    id: 1,\n    field: '#',\n  },\n  {\n    id: 2,\n    field: 'Username',\n  },\n  {\n    id: 3,\n    field: 'First name',\n  },\n  {\n    id: 4,\n    field: 'Last name',\n  },\n  {\n    id: 5,\n    field: 'Email',\n  },\n];\n"],"sourceRoot":""}